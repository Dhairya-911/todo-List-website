{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\frontend\\\\src\\\\components\\\\LoadingSpinner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { gsapAnimations } from '../utils/animations';\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  message = 'Loading...'\n}) => {\n  _s();\n  const spinnerRef = useRef(null);\n  const dotsRef = useRef([]);\n  useEffect(() => {\n    if (spinnerRef.current) {\n      gsapAnimations.loadingSpinner(spinnerRef.current);\n    }\n\n    // Animate dots\n    dotsRef.current.forEach((dot, index) => {\n      if (dot) {\n        gsap.to(dot, {\n          scale: [1, 1.5, 1],\n          duration: 1,\n          repeat: -1,\n          delay: index * 0.2,\n          ease: \"power2.inOut\"\n        });\n      }\n    });\n  }, []);\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      color: '#fff',\n      fontFamily: \"'Segoe UI', 'Roboto', sans-serif\"\n    },\n    spinner: {\n      width: '60px',\n      height: '60px',\n      border: '6px solid rgba(255, 255, 255, 0.3)',\n      borderTop: '6px solid #fff',\n      borderRadius: '50%',\n      marginBottom: '1.5rem'\n    },\n    message: {\n      fontSize: '1.2rem',\n      fontWeight: '500',\n      marginBottom: '1rem',\n      letterSpacing: '0.5px'\n    },\n    dots: {\n      display: 'flex',\n      gap: '0.5rem'\n    },\n    dot: {\n      width: '8px',\n      height: '8px',\n      borderRadius: '50%',\n      backgroundColor: 'rgba(255, 255, 255, 0.8)'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: spinnerRef,\n      style: styles.spinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.dots,\n      children: [...Array(3)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => dotsRef.current[index] = el,\n        style: styles.dot\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingSpinner, \"sH532sJCF3G+tFZ4mhmtP+44LSg=\");\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","useEffect","useRef","gsapAnimations","gsap","jsxDEV","_jsxDEV","LoadingSpinner","message","_s","spinnerRef","dotsRef","current","loadingSpinner","forEach","dot","index","to","scale","duration","repeat","delay","ease","styles","container","display","flexDirection","justifyContent","alignItems","height","background","color","fontFamily","spinner","width","border","borderTop","borderRadius","marginBottom","fontSize","fontWeight","letterSpacing","dots","gap","backgroundColor","style","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","el","_c","$RefreshReg$"],"sources":["D:/todo-app/frontend/src/components/LoadingSpinner.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { gsapAnimations } from '../utils/animations';\r\nimport { gsap } from 'gsap';\r\n\r\nconst LoadingSpinner = ({ message = 'Loading...' }) => {\r\n  const spinnerRef = useRef(null);\r\n  const dotsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    if (spinnerRef.current) {\r\n      gsapAnimations.loadingSpinner(spinnerRef.current);\r\n    }\r\n\r\n    // Animate dots\r\n    dotsRef.current.forEach((dot, index) => {\r\n      if (dot) {\r\n        gsap.to(dot, {\r\n          scale: [1, 1.5, 1],\r\n          duration: 1,\r\n          repeat: -1,\r\n          delay: index * 0.2,\r\n          ease: \"power2.inOut\"\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const styles = {\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '100vh',\r\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n      color: '#fff',\r\n      fontFamily: \"'Segoe UI', 'Roboto', sans-serif\",\r\n    },\r\n    spinner: {\r\n      width: '60px',\r\n      height: '60px',\r\n      border: '6px solid rgba(255, 255, 255, 0.3)',\r\n      borderTop: '6px solid #fff',\r\n      borderRadius: '50%',\r\n      marginBottom: '1.5rem',\r\n    },\r\n    message: {\r\n      fontSize: '1.2rem',\r\n      fontWeight: '500',\r\n      marginBottom: '1rem',\r\n      letterSpacing: '0.5px',\r\n    },\r\n    dots: {\r\n      display: 'flex',\r\n      gap: '0.5rem',\r\n    },\r\n    dot: {\r\n      width: '8px',\r\n      height: '8px',\r\n      borderRadius: '50%',\r\n      backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div ref={spinnerRef} style={styles.spinner}></div>\r\n      <div style={styles.message}>{message}</div>\r\n      <div style={styles.dots}>\r\n        {[...Array(3)].map((_, index) => (\r\n          <div\r\n            key={index}\r\n            ref={el => dotsRef.current[index] = el}\r\n            style={styles.dot}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}